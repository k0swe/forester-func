name: Deploy

on:
  push:
    tags:
      - deploy

jobs:

  test:
    name: Run unit tests
    strategy:
      matrix:
        go-version: [ 1.13.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: go test ./...

      - name: Vet
        run: go vet ./...

  deploy-ImportQrz:
    runs-on: ubuntu-latest
    name: Deploy ImportQrz to Cloud Functions
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: GCP Auth
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Cloud Functions Deploy ImportQrz
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: ImportQrz
          entry_point: ImportQrz
          runtime: go113
          env_vars: GCP_PROJECT=k0swe-kellog

  deploy-ImportLotw:
    runs-on: ubuntu-latest
    name: Deploy ImportLotw to Cloud Functions
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: GCP Auth
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Cloud Functions Deploy ImportLotw
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: ImportLotw
          entry_point: ImportLotw
          runtime: go113
          env_vars: GCP_PROJECT=k0swe-kellog

  deploy-UpdateSecret:
    runs-on: ubuntu-latest
    name: Deploy UpdateSecret to Cloud Functions
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: GCP Auth
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Cloud Functions Deploy UpdateSecret
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: UpdateSecret
          entry_point: UpdateSecret
          runtime: go113
          env_vars: GCP_PROJECT=k0swe-kellog

  deploy-FillNewQsoFromQrz:
    runs-on: ubuntu-latest
    name: Deploy FillNewQsoFromQrz to Cloud Functions
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: GCP Auth
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Cloud Functions Deploy FillNewQsoFromQrz
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: FillNewQsoFromQrz
          entry_point: FillNewQsoFromQrz
          event_trigger_type: google.pubsub.topic.publish
          event_trigger_resource: projects/k0swe-kellog/topics/contact-created
          runtime: go113
          env_vars: GCP_PROJECT=k0swe-kellog

  deploy-Javascript:
    runs-on: ubuntu-latest
    name: Deploy Javascript Functions to Cloud Functions

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Setup Firebase CLI
        run: npm i -g firebase-tools

      - name: Cache node deps
        uses: actions/cache@v2
        env:
          cache-name: cache-node-deps
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install deps
        working-directory: ./javascript/functions/
        run: npm install

      - name: Build & deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        working-directory: ./javascript/functions/
        run: npx firebase deploy --only functions --token "$FIREBASE_TOKEN"
