name: Deploy

on: workflow_dispatch

jobs:
  test-go:
    uses: k0swe/forester-func/.github/workflows/test-go.yml@main

  deploy-golang-http:
    name: Deploy Golang HTTP
    runs-on: ubuntu-latest
    needs: test-go
    strategy:
      matrix:
        function-name: [ ImportQrz, ImportLotw, UpdateSecret ]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: GCP Auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Cloud Functions Deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: ${{ matrix.function-name }}
          entry_point: ${{ matrix.function-name }}
          runtime: go116
          env_vars: GCP_PROJECT=k0swe-kellog
          deploy_timeout: 900

  deploy-golang-pubsub:
    runs-on: ubuntu-latest
    name: Deploy Golang PubSub
    needs: test-go
    strategy:
      matrix:
        function-spec: [
          { name: FillNewQsoFromQrz, trigger: projects/k0swe-kellog/topics/contact-created }
        ]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: GCP Auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Cloud Functions Deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: ${{ matrix.function-spec.name }}
          entry_point: ${{ matrix.function-spec.name }}
          event_trigger_type: google.pubsub.topic.publish
          event_trigger_resource: ${{ matrix.function-spec.trigger }}
          runtime: go116
          env_vars: GCP_PROJECT=k0swe-kellog
          deploy_timeout: 900

  test-js:
    uses: k0swe/forester-func/.github/workflows/test-js.yml@main

  deploy-javascript:
    runs-on: ubuntu-latest
    name: Deploy Javascript Functions to Cloud Functions
    needs: test-js

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Setup Firebase CLI
        run: npm i -g firebase-tools

      - name: Cache node deps
        uses: actions/cache@v2
        env:
          cache-name: cache-node-deps
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install deps
        working-directory: ./javascript/functions/
        run: npm install

      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        working-directory: ./javascript/functions/
        run: npx firebase deploy --only functions --token "$FIREBASE_TOKEN"

  tag:
    runs-on: ubuntu-latest
    name: Tag as deployed
    needs:
      - deploy-golang-http
      - deploy-golang-pubsub
      - deploy-javascript
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Tag as deployed
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git tag deployed --force
          git push --tags --force
